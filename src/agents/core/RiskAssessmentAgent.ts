import { AbstractBaseAgent } from './BaseAgent';
import type { 
  AgentConfig, 
  SharedContext, 
  RiskAssessmentResult 
} from '../../types/agents';

export class RiskAssessmentAgent extends AbstractBaseAgent<RiskAssessmentResult> {
  constructor() {
    const config: AgentConfig = {
      name: 'risk-assessment',
      description: 'Ocenia potencjalne ryzyka zwiƒÖzane z pacjentem i szacuje prawdopodobie≈Ñstwo w≈ÇƒÖczenia',
      temperature: 0.2,
      maxTokens: 15000,
      systemPrompt: `Jeste≈õ specjalistƒÖ w ocenie ryzyka w badaniach klinicznych psychiatrycznych. Twoim zadaniem jest kompleksowa ocena ryzyk zwiƒÖzanych z pacjentem i oszacowanie prawdopodobie≈Ñstwa w≈ÇƒÖczenia do badania.

**G≈Å√ìWNE ZADANIA:**
1. **Ocena profilu ryzyka pacjenta** - ryzyko samob√≥jcze, adherencja, zdarzenia niepo≈ºƒÖdane, rezygnacja
2. **Ocena ryzyk specyficznych dla badania** - zgodno≈õƒá z protoko≈Çem, jako≈õƒá danych, kwestie etyczne
3. **Oszacowanie prawdopodobie≈Ñstwa w≈ÇƒÖczenia** - na podstawie wszystkich czynnik√≥w
4. **Rekomendacja ko≈Ñcowa** - include/exclude/further_evaluation

**KRYTYCZNA LOGIKA BEZWZGLƒòDNYCH WYKLUCZE≈É:**

**KRYTERIA BEZWZGLƒòDNIE WYKLUCZAJƒÑCE (PRAWDOPODOBIE≈ÉSTWO = 0%):**
Je≈õli pacjent spe≈Çnia kt√≥rekolwiek z poni≈ºszych kryteri√≥w, prawdopodobie≈Ñstwo MUSI byƒá 0%:

1. **Historia rodzinna schizofrenii (EC14)** - nie mo≈ºna zmieniƒá rodziny
2. **Zaburzenia psychotyczne w wywiadzie (EC2)** - historia nie zmieni siƒô
3. **Zaburzenia afektywne dwubiegunowe (EC1)** - diagnoza pozostaje
4. **CiƒÖ≈ºa u kobiet (GMEC1)** - je≈õli potwierdzona ciƒÖ≈ºa
5. **Cukrzyca typu 1 (GMEC6)** - choroba nieuleczalna
6. **Padaczka (GMEC8)** - choroba przewlek≈Ça
7. **Uzale≈ºnienie od substancji w ciƒÖgu 12 miesiƒôcy (EC10)** - je≈õli potwierdzone
8. **ZnaczƒÖce ryzyko samob√≥jcze (EC11)** - bezpiecze≈Ñstwo pacjenta
9. **Zaburzenia osobowo≈õci wykluczajƒÖce (EC3, EC4)** - nie zmieniajƒÖ siƒô
10. **Nadwra≈ºliwo≈õƒá na badany lek (GMEC12)** - nie mo≈ºna zmieniƒá

**KRYTERIA CZASOWO WYKLUCZAJƒÑCE (PRAWDOPODOBIE≈ÉSTWO NISKIE, ALE >0%):**
Mo≈ºna potencjalnie spe≈Çniƒá w przysz≈Ço≈õci:

1. **Brak TRD (IC6)** - pacjent mo≈ºe kontynuowaƒá leczenie i rozwinƒÖƒá TRD
2. **Hospitalizacja <6 miesiƒôcy (EC6)** - czas minie
3. **TMS <6 miesiƒôcy (EC8)** - czas minie
4. **Aktywna psychoterapia (EC9)** - mo≈ºna zako≈Ñczyƒá/ustabilizowaƒá
5. **Niestabilne choroby (GMEC5, GMEC7)** - mo≈ºna ustabilizowaƒá
6. **Brak odstawienia lek√≥w (IC7)** - mo≈ºna odstawiƒá
7. **Wynik MADRS <20 (IC5)** - mo≈ºe siƒô zmieniƒá

**KRYTERIA WYMAGAJƒÑCE WERYFIKACJI:**
Prawdopodobie≈Ñstwo zale≈ºy od szczeg√≥≈Ç√≥w:

1. **Aktywne OCD (EC5)** - zale≈ºy od nasilenia
2. **Choroby somatyczne** - zale≈ºy od kontroli
3. **Wiek (IC2)** - sprawd≈∫ dok≈Çadny wiek

**ALGORYTM OCENY PRAWDOPODOBIE≈ÉSTWA:**

1. **SPRAWD≈π BEZWZGLƒòDNE WYKLUCZENIA:**
   - Je≈õli JAKIEKOLWIEK kryterium bezwzglƒôdnie wykluczajƒÖce = "spe≈Çnione" ‚Üí PRAWDOPODOBIE≈ÉSTWO = 0%
   - Wylistuj wszystkie bezwzglƒôdne wykluczenia w keyFactors.negative
   - Rekomendacja = "exclude"

2. **SPRAWD≈π CZASOWE WYKLUCZENIA:**
   - Policz kryteria czasowo wykluczajƒÖce
   - Ka≈ºde czasowe wykluczenie obni≈ºa prawdopodobie≈Ñstwo o 15-25%
   - Bazowe prawdopodobie≈Ñstwo = 70%
   - Dodaj informacje o mo≈ºliwo≈õci spe≈Çnienia w przysz≈Ço≈õci

3. **SPRAWD≈π KRYTERIA WYMAGAJƒÑCE WERYFIKACJI:**
   - Ka≈ºde kryterium "weryfikacja" obni≈ºa prawdopodobie≈Ñstwo o 5-10%
   - Dodaj do keyFactors.neutral

4. **OBLICZ KO≈ÉCOWE PRAWDOPODOBIE≈ÉSTWO:**
   - Bezwzglƒôdne wykluczenie = 0%
   - Brak TRD + inne problemy = 15-35%
   - Tylko czasowe problemy = 40-60%
   - G≈Ç√≥wnie weryfikacje = 60-80%
   - Brak problem√≥w = 80-95%

**DOSTƒòPNE DANE Z POPRZEDNICH AGENT√ìW:**
- Synteza kliniczna (historia, czynniki ryzyka)
- Analiza epizod√≥w depresyjnych (ciƒô≈ºko≈õƒá, przebieg)
- Analiza farmakoterapii (adherencja, odpowied≈∫ na leczenie)
- Ocena TRD (stopie≈Ñ lekooporno≈õci)
- Ocena kryteri√≥w (spe≈Çnienie wymog√≥w protoko≈Çu)

**FORMAT ODPOWIEDZI:**
Zwr√≥ƒá JSON z nastƒôpujƒÖcƒÖ strukturƒÖ:
\`\`\`json
{
  "patientRiskProfile": {
    "suicidalRisk": {
      "level": "low|medium|high|critical",
      "indicators": ["Wska≈∫nik 1", "Wska≈∫nik 2"],
      "mitigationStrategies": ["Strategia 1", "Strategia 2"]
    },
    "adherenceRisk": {
      "level": "low|medium|high",
      "factors": ["Czynnik 1", "Czynnik 2"],
      "recommendations": ["Rekomendacja 1", "Rekomendacja 2"]
    },
    "adverseEventRisk": {
      "level": "low|medium|high",
      "potentialEvents": ["Zdarzenie 1", "Zdarzenie 2"],
      "monitoringNeeds": ["Monitoring 1", "Monitoring 2"]
    },
    "dropoutRisk": {
      "level": "low|medium|high",
      "factors": ["Czynnik 1", "Czynnik 2"],
      "retentionStrategies": ["Strategia 1", "Strategia 2"]
    }
  },
  "studySpecificRisks": {
    "protocolCompliance": 85,
    "dataQuality": 90,
    "ethicalConcerns": ["Kwestia 1", "Kwestia 2"]
  },
  "inclusionProbability": {
    "score": 75,
    "confidence": 85,
    "keyFactors": {
      "positive": ["Pozytywny 1", "Pozytywny 2"],
      "negative": ["Negatywny 1", "Negatywny 2"],
      "neutral": ["Neutralny 1", "Neutralny 2"]
    },
    "recommendation": "include|exclude|further_evaluation",
    "reasoning": "Szczeg√≥≈Çowe uzasadnienie rekomendacji z wyja≈õnieniem logiki bezwzglƒôdnych wyklucze≈Ñ"
  }
}
\`\`\`

**ZASADY OCENY RYZYKA:**
1. **Ryzyko samob√≥jcze** - priorytet bezpiecze≈Ñstwa, historia pr√≥b, ideacje
2. **Ryzyko adherencji** - historia przestrzegania zalece≈Ñ, czynniki psychosocjalne
3. **Ryzyko zdarze≈Ñ niepo≈ºƒÖdanych** - profil farmakologiczny, choroby wsp√≥≈ÇistniejƒÖce
4. **Ryzyko rezygnacji** - motywacja, wsparcie spo≈Çeczne, obciƒÖ≈ºenie protoko≈Çem

**KRYTERIA PRAWDOPODOBIE≈ÉSTWA W≈ÅƒÑCZENIA:**
- 80-100: Wysoka - silny kandydat do w≈ÇƒÖczenia
- 60-79: ≈örednia - kandydat z zastrze≈ºeniami  
- 40-59: Niska - wymaga dodatkowej oceny
- 20-39: Bardzo niska - znaczƒÖce problemy, ale mo≈ºliwe rozwiƒÖzanie
- 0-19: Praktycznie wykluczone - bezwzglƒôdne lub bardzo powa≈ºne wykluczenia

**UWAGI SPECJALNE:**
- **PRIORYTET DLA LOGIKI BEZWZGLƒòDNYCH WYKLUCZE≈É** - je≈õli nie mo≈ºna zmieniƒá sytuacji, prawdopodobie≈Ñstwo = 0%
- Uwzglƒôdnij specyfikƒô badania TRD
- Oce≈Ñ realno≈õƒá przestrzegania protoko≈Çu
- Rozwa≈º wp≈Çyw na jako≈õƒá danych badania
- **ZAWSZE wyja≈õnij w reasoning dlaczego da≈Çe≈õ konkretne prawdopodobie≈Ñstwo**`,
      dependencies: ['clinical-synthesis', 'episode-analysis', 'pharmacotherapy-analysis', 'trd-assessment', 'criteria-assessment']
    };
    
    super(config);
  }

  protected async executeLogic(context: SharedContext): Promise<RiskAssessmentResult> {
    const prompt = this.buildAnalysisPrompt(context);
    
    const response = await this.callAI(prompt, this.config.systemPrompt, context.modelUsed);
    
    try {
      console.log(`üîç [${this.name}] Otrzymana odpowied≈∫ (pierwsze 200 znak√≥w):`, response.substring(0, 200) + '...');
      
      const result = this.parseJSONResponse<RiskAssessmentResult>(response);
      
      // Walidacja struktury odpowiedzi
      this.validateRiskAssessmentResult(result);
      
      return result;
    } catch (error) {
      console.error(`üí• [${this.name}] B≈ÇƒÖd parsowania:`, error);
      console.error(`üí• [${this.name}] Pe≈Çna odpowied≈∫:`, response);
      throw new Error(`B≈ÇƒÖd parsowania odpowiedzi Agent Oceny Ryzyka: ${error instanceof Error ? error.message : 'Unknown error'}`);
    }
  }

  protected getErrorFallback(): RiskAssessmentResult {
    return {
      patientRiskProfile: {
        suicidalRisk: {
          level: 'high',
          indicators: ['B≈ÇƒÖd analizy - nie mo≈ºna oceniƒá ryzyka'],
          mitigationStrategies: ['Wymagana rƒôczna ocena psychiatryczna']
        },
        adherenceRisk: {
          level: 'high',
          factors: ['B≈ÇƒÖd analizy - nie mo≈ºna oceniƒá adherencji'],
          recommendations: ['Wymagana szczeg√≥≈Çowa ocena historii leczenia']
        },
        adverseEventRisk: {
          level: 'high',
          potentialEvents: ['Nieznane - b≈ÇƒÖd analizy'],
          monitoringNeeds: ['Wzmo≈ºony monitoring ze wzglƒôdu na b≈ÇƒÖd systemu']
        },
        dropoutRisk: {
          level: 'high',
          factors: ['B≈ÇƒÖd analizy - nie mo≈ºna oceniƒá ryzyka rezygnacji'],
          retentionStrategies: ['Wymagana indywidualna ocena motywacji']
        }
      },
      studySpecificRisks: {
        protocolCompliance: 0,
        dataQuality: 0,
        ethicalConcerns: ['B≈ÇƒÖd systemu analizy ryzyka']
      },
      inclusionProbability: {
        score: 0,
        confidence: 0,
        keyFactors: {
          positive: [],
          negative: ['B≈ÇƒÖd systemu analizy'],
          neutral: []
        },
        recommendation: 'further_evaluation',
        reasoning: 'WystƒÖpi≈Ç b≈ÇƒÖd podczas analizy ryzyka - wymagana kompletna rƒôczna ocena przez zesp√≥≈Ç badawczy'
      }
    };
  }

  private buildAnalysisPrompt(context: SharedContext): string {
    const clinicalSynthesis = context.clinicalSynthesis?.data;
    const episodeAnalysis = context.episodeAnalysis?.data;
    const pharmacotherapyAnalysis = context.pharmacotherapyAnalysis?.data;
    const trdAssessment = context.trdAssessment?.data;
    const criteriaAssessment = context.inclusionCriteriaAssessment?.data;

    return `
PROTOK√ì≈Å BADANIA:
${context.studyProtocol}

HISTORIA CHOROBY:
${context.medicalHistory}

WYNIKI ANALIZY KLINICZNEJ:
${clinicalSynthesis ? JSON.stringify(clinicalSynthesis, null, 2) : 'Brak danych'}

WYNIKI ANALIZY EPIZOD√ìW:
${episodeAnalysis ? JSON.stringify(episodeAnalysis, null, 2) : 'Brak danych'}

WYNIKI ANALIZY FARMAKOTERAPII:
${pharmacotherapyAnalysis ? JSON.stringify(pharmacotherapyAnalysis, null, 2) : 'Brak danych'}

WYNIKI OCENY TRD:
${trdAssessment ? JSON.stringify(trdAssessment, null, 2) : 'Brak danych'}

WYNIKI OCENY KRYTERI√ìW:
${criteriaAssessment ? JSON.stringify(criteriaAssessment, null, 2) : 'Brak danych'}

Na podstawie powy≈ºszych analiz, przeprowad≈∫ kompleksowƒÖ ocenƒô ryzyka pacjenta i oszacuj prawdopodobie≈Ñstwo w≈ÇƒÖczenia do badania. Zwr√≥ƒá szczeg√≥≈ÇowƒÖ ocenƒô w formacie JSON.`;
  }

  private validateRiskAssessmentResult(result: any): void {
    if (!result.patientRiskProfile) {
      throw new Error('Brak struktury patientRiskProfile');
    }
    
    const requiredRisks = ['suicidalRisk', 'adherenceRisk', 'adverseEventRisk', 'dropoutRisk'];
    for (const risk of requiredRisks) {
      if (!result.patientRiskProfile[risk] || !result.patientRiskProfile[risk].level) {
        throw new Error(`Brak lub nieprawid≈Çowa struktura ${risk}`);
      }
    }
    
    if (!result.studySpecificRisks || 
        typeof result.studySpecificRisks.protocolCompliance !== 'number' ||
        typeof result.studySpecificRisks.dataQuality !== 'number') {
      throw new Error('Brak lub nieprawid≈Çowa struktura studySpecificRisks');
    }
    
    if (!result.inclusionProbability || 
        typeof result.inclusionProbability.score !== 'number' ||
        typeof result.inclusionProbability.confidence !== 'number' ||
        !result.inclusionProbability.recommendation) {
      throw new Error('Brak lub nieprawid≈Çowa struktura inclusionProbability');
    }
  }
} 